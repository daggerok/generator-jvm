buildscript {
  ext {
    javaVersion = '1.8'
    javaeeVersion = '8.0'
    facesVersion = '2.2.16'
    slf4jVersion = '1.7.25'
    jgivenVersion = '0.15.3'
    logbackVersion = '1.2.3'
    lombokVersion = '1.18.4'
    assertjVersion = '3.11.1'
    assertkJvmVersion = '0.12'
    junitJupiterVersion = '5.3.1'
    junitPlatformVersion = '1.3.0'
  }

  dependencies {
    classpath 'org.asciidoctor:asciidoctorj-pdf:1.5.0-alpha.16'
    classpath 'org.jruby:jruby-complete:9.1.13.0'
  }
}

plugins {
  //id 'com.gradle.build-scan' version '1.16'
//id 'ear'
  id 'war'
  id 'idea'
  id 'maven'
  id 'eclipse'
  id 'com.avast.gradle.docker-compose' version '0.7.1'
  id 'org.asciidoctor.convert' version '1.5.8.1' apply false
  id 'org.ajoberstar.git-publish' version '2.0.0-rc.2' apply false
  id 'io.franzbecker.gradle-lombok' version '1.14' apply false
  id 'cn.bestwu.propdeps-eclipse' version '0.0.10' apply false
  id 'cn.bestwu.propdeps-maven' version '0.0.10' apply false
  id 'cn.bestwu.propdeps-idea' version '0.0.10' apply false
  id 'cn.bestwu.propdeps' version '0.0.10' apply false
}

/*
wrapper {
  gradleVersion = '5.0'
  distributionType = 'BIN'
}
*/

apply from: "$projectDir/gradle/ide.gradle"
apply from: "$projectDir/gradle/clean.gradle"
apply from: "$projectDir/gradle/repositories.gradle"

version = '0.0.1'
group = 'com.github.daggerok'
sourceCompatibility = targetCompatibility = "$javaVersion"

apply plugin: 'io.franzbecker.gradle-lombok'
lombok.version = project.lombokVersion

//ear { archiveName = "${project.name}.ear" }
war {
  archiveName = "${project.name}.war"
}

defaultTasks 'clean', 'build'

compileJava.dependsOn(processResources)

dependencies {

  compile "com.sun.faces:jsf-api:$facesVersion"
  compile "com.sun.faces:jsf-impl:$facesVersion"
  //// Tomcat requires weld dependency:
  //compile 'org.jboss.weld.servlet:weld-servlet:2.4.7.Final'
  providedCompile "javax:javaee-web-api:$javaeeVersion"

  compile "org.slf4j:slf4j-api:$slf4jVersion"
  compile "org.slf4j:slf4j-jdk14:$slf4jVersion"

  testCompile 'junit:junit:4.12'
  testImplementation "org.junit.jupiter:junit-jupiter-api:$junitJupiterVersion"
  testImplementation 'org.hamcrest:hamcrest-core:1.3'
  testRuntime "org.junit.jupiter:junit-jupiter-api:$junitJupiterVersion"
  testRuntime "org.junit.jupiter:junit-jupiter-engine:$junitJupiterVersion"
  testRuntime "org.junit.vintage:junit-vintage-engine:4.12.3"
  testRuntime "org.junit.platform:junit-platform-launcher:$junitPlatformVersion"
  testCompileOnly 'org.apiguardian:apiguardian-api:1.0.0'
}

apply from: "$projectDir/gradle/findbugs.gradle"
apply from: "$projectDir/gradle/jacoco.gradle"
apply from: "$projectDir/gradle/docker-compose.gradle"
apply from: "$projectDir/gradle/docs.gradle"
//apply from: "$projectDir/gradle/build-scan.gradle"
