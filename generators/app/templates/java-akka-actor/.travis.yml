notifications:
  email: false

env:
  global:
  - TERM=dumb

language: java
jdk: oraclejdk8

service:
- docker

addons:
  apt:
    sources:
    - google-chrome
    packages:
    - google-chrome-stable
    - libappindicator1
    - fonts-liberation
    - bash
    - curl
    - libxml2-utils
    - docker-ce

install: true
before_install:
- export CHROME_BIN=/usr/bin/google-chrome
- export DISPLAY=:99.0
- sh -e /etc/init.d/xvfb start
#
- sudo add-apt-repository universe -y >/dev/null
- echo "deb http://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list >/dev/null
- sudo apt-get update -yqq >/dev/null
- sudo apt-get install -yqq --no-install-suggests --no-install-recommends
  tree jq python-pip curl bash sudo >/dev/null
#
- sudo pip install docker-compose httpie >/dev/null 2>&1
#
- source <(curl -s https://raw.githubusercontent.com/daggerok/bash-functions/master/main.bash)
- stop_any 8080 3000 80 >/dev/null
#
- curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add - >/dev/null
- echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list >/dev/null
- sudo apt-get update -yqq >/dev/null
- sudo apt-get install -yqq --no-install-suggests --no-install-recommends yarn >/dev/null

script:
- export root=$(pwd)
#
- bash gradlew >/dev/null 2>&1
- java -jar ./build/libs/*-all.jar
#
- bash gradlew clean installDist >/dev/null 2>&1
- bash ./build/install/<%= projectDirectory %>/bin/<%= projectDirectory %>
#
- bash gradlew clean distZip >/dev/null 2>&1
- unzip -o ./build/distributions/<%= projectDirectory %>-0.0.1.zip -d /tmp
- bash /tmp/<%= projectDirectory %>-0.0.1/bin/<%= projectDirectory %>
#
- bash gradlew clean build composeUp
- bash gradlew composeDown
#
- bash mvnw clean package >/dev/null 2>&1
- java -jar target/*-all.jar
#
- bash mvnw docker-compose:up -P docker
- bash mvnw docker-compose:down -P docker

before_deploy:
- cd ${root}
#- ./gradlew documentation -Dorg.gradle.jvmargs='-Xmx1g'
- ./mvnw -Pdocs
- mkdir -p ./target/generated-docs
- cp -Rf ./target/generated-docs/index.html ./target/generated-docs/404.html

deploy:
  provider: pages
  skip-cleanup: true
  # travis encrypt GITHUB_TOKEN=<your github repo token> --add
  github-token: "$GITHUB_TOKEN"
  keep-history: true
  on:
    branch: master
  local-dir: target/generated-docs
  target_branch: gh-pages

before_cache:
- for item in $(find ~/.gradle -name "*.lock");
    do sudo rm -rf $item ;
  done

cache:
  directories:
  - $HOME/.m2
  - $HOME/.gradle
  - $HOME/.docker
