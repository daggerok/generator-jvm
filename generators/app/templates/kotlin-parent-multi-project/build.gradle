buildscript {
  ext {
    javaVersion = '1.8'
    vavrVersion = '0.9.2'
    slf4jVersion = '1.7.25'
    kotlinVersion = '1.3.10'
    jgivenVersion = '0.15.3'
    logbackVersion = '1.2.3'
    lombokVersion = '1.18.4'
    junitJupiterVersion = '5.3.1'
    junitPlatformVersion = '1.3.0'
    jacksonKotlinVersion = '2.9.7'
    materializecssVersion = '1.0.0'
    materialDesignIconsVersion = '3.0.1'
    springBootVersion = '2.1.0.RELEASE'
    springCloudVersion = '2.0.2.RELEASE'
    assertkJvmVersion = '0.12'
    assertjVersion = '3.11.1'
    hamcrestVersion = '1.3'
    junit4Version = '4.12'
  }

  dependencies {
    classpath "org.jetbrains.kotlin:kotlin-sam-with-receiver:$kotlinVersion"
    classpath 'org.asciidoctor:asciidoctorj-pdf:1.5.0-alpha.16'
    classpath 'org.jruby:jruby-complete:9.1.13.0'
  }
}

plugins {
  //id 'com.gradle.build-scan' version '1.16'

  id 'idea'
  id 'eclipse'
  id 'com.avast.gradle.docker-compose' version '0.7.1'

  id 'org.jetbrains.kotlin.jvm' version '1.3.10' apply false
  id 'org.jetbrains.kotlin.kapt' version '1.3.10' apply false
  id 'org.jetbrains.kotlin.plugin.jpa' version '1.3.10' apply false
  id 'org.jetbrains.kotlin.plugin.noarg' version '1.3.10' apply false
  id 'org.jetbrains.kotlin.plugin.spring' version '1.3.10' apply false
  id 'org.jetbrains.kotlin.plugin.allopen' version '1.3.10' apply false

  id 'io.spring.dependency-management' version '1.0.6.RELEASE' apply false
  id 'com.github.johnrengelman.shadow' version '4.0.1' apply false
  id 'io.franzbecker.gradle-lombok' version '1.14' apply false
  id 'org.ajoberstar.git-publish' version '2.0.0-rc.2' apply false
  id 'org.asciidoctor.convert' version '1.5.8.1' apply false
  id 'cn.bestwu.propdeps-eclipse' version '0.0.10' apply false
  id 'cn.bestwu.propdeps-maven' version '0.0.10' apply false
  id 'cn.bestwu.propdeps-idea' version '0.0.10' apply false
  id 'cn.bestwu.propdeps' version '0.0.10' apply false
}

/*
wrapper {
  gradleVersion = '5.0'
  distributionType = 'BIN'
}
*/

apply from: "$projectDir/gradle/ide.gradle"
apply from: "$projectDir/gradle/clean.gradle"
apply from: "$projectDir/gradle/repositories.gradle"
apply from: "$projectDir/gradle/base.gradle"
apply from: "$projectDir/gradle/java.gradle"
apply from: "$projectDir/gradle/kotlin.gradle"
apply from: "$projectDir/gradle/junit.gradle"
apply from: "$projectDir/gradle/jacoco.gradle"
apply from: "$projectDir/gradle/findbugs.gradle"
apply from: "$projectDir/gradle/docker-compose.gradle"
apply from: "$projectDir/gradle/docs.gradle"
//apply from: "$projectDir/gradle/build-scan.gradle"

/*
// spring-boot multi-module preamble:
// this in dependencies closure really doesn't work:
// compile project(':submodule').sourceSets.main.output // dot't do this!

// 1. in spring-boot submodules use next configs:

bootJar {
  enabled = false
}
jar {
  enabled = true
}

// 2. in spring-boot target main module to fix gradle compile build + lombok issue use all of these:

dependencies {
  annotationProcessor(project(':submodule'))
  compileOnly(project(':submodule'))
  compile(project(':submodule'))
}
*/
